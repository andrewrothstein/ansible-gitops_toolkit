---
- name: Get existing clusters
  ansible.builtin.shell: k3d cluster list -o json | jq -r 'map(.name)'
  register: existing_clusters_json

- name: Compute existing and all clusters
  ansible.builtin.set_fact:
    existing_clusters: '{{ existing_clusters_json.stdout }}'
    all_clusters: '{{ [gtk_clusters.controlplane] + gtk_clusters.workload }}'

- name: Compute enabled and disabled clusters
  ansible.builtin.set_fact:
    enabled_clusters: "{{ all_clusters | selectattr('enabled', '==', True) | map(attribute='name') }}"
    disabled_clusters: "{{ all_clusters | selectattr('enabled', '==', False) | map(attribute='name') }}"

- name: Compute clusters to create and delete
  ansible.builtin.set_fact:
    clusters_to_delete: '{{ disabled_clusters | intersect(existing_clusters) }}'
    clusters_to_create: '{{ enabled_clusters | difference(existing_clusters) }}'

- name: Compute counts of clusters to create and delete
  ansible.builtin.set_fact:
    cnt_to_delete: '{{ clusters_to_delete | length }}'
    cnt_to_create: '{{ clusters_to_create | length }}'

- name: Deleting {{ cnt_to_delete }} existing clusters
  ansible.builtin.command: k3d cluster delete {{ item | quote }}
  loop: "{{ clusters_to_delete }}"

- name: Building clusters...
  ansible.builtin.shell: gitops-toolkit clusters
  register: gtk_exec_res
  until: gtk_exec_res.rc == 0
  retries: 5
  when: cnt_to_create | int > 0

- name: Cluster builds output...
  ansible.builtin.debug:
    var: gtk_exec_res.stderr_lines
  when: should_run_gtk

- name: creating contexts dir {{ _gtk_start_clusters.context_output_dir }}
  file:
    path: '{{ _gtk_start_clusters.context_output_dir }}'
    state: directory
    mode: '755'

- name: >-
    Issuing {{ enabled_clusters | length }} kube contexts
    into {{ _gtk_start_clusters.context_output_dir -}}
  loop: "{{ enabled_clusters }}"
  shell: |-
    k3d \
      kubeconfig \
      get \
      {{ item | quote }} \
      > {{ _gtk_start_clusters.context_output_dir }}/k3d_{{ item }}_ctx

- when: _gtk_start_clusters.set_kube_config
  block:
    - name: Set kubeconfig to admin cluster
      ansible.builtin.file:
        dest: '{{ _gtk_start_clusters.context_output_dir }}/config'
        src: '{{ _gtk_start_clusters.context_output_dir }}/k3d_{{ _gtk_clusters.controlplane.name }}_ctx'
        state: link

    - name: Set namespace={{ _gtk_argocd.namespace }} on config for current-context
      shell: |
        kubectl \
          config \
          set-context $(kubectl config current-context) \
          --namespace={{ _gtk_argocd.namespace }}
